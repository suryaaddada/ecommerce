import React, { useEffect, useState } from "react";
import { Card, CardContent, CardMedia, Typography } from "@mui/material";
import { Link, useLocation, useNavigate } from "react-router-dom";
import { Button } from "@mui/material";

export const VendorPage = () => {
    const info = sessionStorage.getItem("VToken");
    const ParsedVendor = JSON.parse(info);
    const id = ParsedVendor.id;
    const [products, setProducts] = useState([]);

    const location=useLocation();
    const navigate=useNavigate();

   
    

    useEffect(() => {
        const fetchProducts = async () => {
            try {
                const response = await fetch(`https://localhost:7199/api/Product/Get%20Inventory%20Details%20By%20Vendor%20iD/${id}`);
                if (response.ok) {
                    const data = await response.json();
                    console.log("Data", data);
                    setProducts(data);
                } else {
                    console.error("Failed to fetch products");
                }
            } catch (error) {
                console.error("Error fetching products:", error);
            }
        };
        fetchProducts();
    }, [id]);

    const groupProductsByProductId = () => {
        const groupedProducts = {};
        products.forEach(product => {
            if (!groupedProducts[product.id]) {
                groupedProducts[product.id] = { ...product, sizes: [] };
            }
            if (!groupedProducts[product.id].sizes.includes({ productSize: product.productSize, price: product.price, stock: product.stock,id:product.inventoryId })) {
                groupedProducts[product.id].sizes.push({ productSize: product.productSize, price: product.price, stock: product.stock,id:product.inventoryId });
            }
            console.log("Id", groupedProducts);
        });
        return Object.values(groupedProducts);
    };

    const groupProductsByBrand = () => {
        const groupedProducts = {};
        const productsByProductId = groupProductsByProductId();

        productsByProductId.forEach(product => {
            const brandName = product.brandName;

            if (!groupedProducts[brandName]) {
                groupedProducts[brandName] = [];
            }

            groupedProducts[brandName].push(product);
        });
        console.log("Brand", groupedProducts);

        return Object.values(groupedProducts);
    };

    return (
        <div style={{ display: "flex", overflowX: "auto" }}>
            {groupProductsByBrand().map((productsForBrand, index) => (
                <div key={index} style={{ display: "flex" }}>
                    <h2>{productsForBrand[0].brandName}</h2> 
                    {productsForBrand.map(product => (
                        <Button onClick={() => navigate("VProduct", { state: { Product: product,vendorId:id } })} key={product.id} style={{ textDecoration: "none", color: "inherit" }}>
                            <Card style={{ maxWidth: 345, margin: "10px" }}>
                                <CardMedia
                                    component="img"
                                    height="140"
                                    image={product.image}
                                    alt={product.brandName}
                                />
                                <CardContent>
                                    <Typography gutterBottom variant="h5" component="div">
                                        {product.description}
                                    </Typography>
                                    <div style={{ display: "flex", justifyContent: "center" }}>
                                        <div>
                                            <div style={{ display: "flex", alignItems: "center", marginBottom: "5px" }}>
                                                <div style={{ marginLeft: "10px", marginRight: "30px" }}>Size</div>
                                                <div style={{ marginRight: "30px" }}>Price</div>
                                                <div>Stock</div>
                                            </div>

                                            {product.sizes.map((size, index) => (
                                                <div key={index} style={{ display: "flex", alignItems: "center", marginBottom: "5px" }}>
                                                    <div style={{ margin: "5px", borderRadius: "50%", border: "1px solid #ccc", width: "30px", height: "30px", display: "flex", justifyContent: "center", alignItems: "center" }}>{size.productSize}</div>
                                                    <div style={{ margin: "5px", marginRight: "40px", marginLeft: 30 }}>{size.price}</div>
                                                    <div style={{ margin: "5px" }}>{size.stock}</div>
                                                </div>
                                            ))}
                                        </div>
                                    </div>
                                </CardContent>
                            </Card>
                        </Button>
                    ))}
                </div>
            ))}
        </div>
    );
};
