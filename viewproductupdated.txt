import React, { useEffect, useState } from "react";
import { useLocation } from "react-router-dom";
import { Typography, Grid, Button, Badge } from "@mui/material";

const ProductDetails = ({ productDetails, onSizeSelect }) => {
  const [selectedSize, setSelectedSize] = useState(null);

  const handleSizeSelect = (size) => {
    setSelectedSize(size);
    onSizeSelect(size);
  };

  return (
    <Grid container spacing={2} style={{ textAlign: 'center' ,paddingLeft:350}}>
      {productDetails.map((detail) => (
        <Grid item key={detail.id} sx={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>
          <Button
            variant={selectedSize === detail.productSize ? "contained" : "outlined"}
            color={detail.stock < 30 ? "error" : "primary"}
            onClick={() => handleSizeSelect(detail.productSize)}
            style={{
              width: 50,
              height: 50,
              borderRadius: 10,
              marginRight: 10,
            }}
          >
            <Typography variant="body1" style={{ marginTop: 10 }}>
              {detail.productSize}
            </Typography>
          </Button>
          <Badge
            color={detail.stock < 30 ? "error" : ""}
            badgeContent={detail.stock < 30 ? "Few left" : ""}
            style={{ marginTop: 30, marginRight: 5, width: 5, height: 10 }}
          />
        </Grid>
      ))}
    </Grid>
  );
};

export const ViewProduct = () => {
  const location = useLocation();
  const [product, setProduct] = useState({});
  const [selectedPrice, setSelectedPrice] = useState(null);
  const { uid, pid } = location.state;

  useEffect(() => {
    const fetchProduct = async () => {
      try {
        const response = await fetch(
          `https://localhost:7199/api/Product/Get Grouped Product/${pid}`
        );

        if (response.ok) {
          const data = await response.json();
          setProduct(data);
        }
      } catch (error) {
        console.error("Error fetching product:", error);
      }
    };

    fetchProduct();
  }, [uid, pid]);

  const handleSizeSelect = (size) => {
    const selectedDetail = product.productDetails.find(detail => detail.productSize === size);
    setSelectedPrice(selectedDetail.price);
  };
  const [quantity, setQuantity] = useState(1);

  const handleIncreaseQuantity = () => {
    if (quantity < 5) {
      setQuantity(prevQuantity => prevQuantity + 1);
    }
  };

  const handleDecreaseQuantity = () => {
    if (quantity > 1) {
      setQuantity(prevQuantity => prevQuantity - 1);
    }
  };

  const handleAddToCart = () => {
    console.log(`Added ${quantity} ${product.brandName} to cart`);
  };

  const handleBuyNow = () => {
    console.log(`Buying ${quantity} ${product.brandName} now`);
  };

  return (
    <div style={{ padding: 80 }}>
      <img src={product.image} alt={product.brandName} style={{ maxWidth: "100%" }} />
      <Typography variant="h4">{product.brandName}</Typography>
      <Typography variant="body1">{product.description}</Typography>
      <Typography variant="body1">Color: {product.color}</Typography>
      <Typography>Available Sizes </Typography>
      {Array.isArray(product.productDetails) && product.productDetails.length > 0 ? (
        <ProductDetails productDetails={product.productDetails} onSizeSelect={handleSizeSelect} />
      ) : (
          <Typography variant="body1">Product details not available</Typography>
        )}
      {selectedPrice && <Typography variant="body1">Price: ${selectedPrice}</Typography>}
      <div style={{ display: "flex", alignItems: "center", justifyContent: "center" }}>
  <div style={{ display: "flex", alignItems: "center",border: "1px solid #000", padding: "5px",borderRadius:50 }}>
    <Button onClick={handleDecreaseQuantity}>-</Button>
    <Typography variant="body1" style={{ margin: "0 10px" }}>{quantity}</Typography>
    <Button onClick={handleIncreaseQuantity}>+</Button>
  </div> 
</div>
<br/>


      <Button onClick={handleAddToCart} color="warning" variant="contained">Add To Cart</Button>
      <Button onClick={handleBuyNow} color="primary" variant="contained">Buy Now</Button>
    </div>
  );
};